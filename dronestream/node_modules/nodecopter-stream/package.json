{
  "name": "nodecopter-stream",
  "author": {
    "name": "Bernhard K. Weisshuhn",
    "email": "bkw@codingforce.com"
  },
  "contributors": [
    {
      "name": "Brian Leroux",
      "email": "b@brian.io"
    }
  ],
  "version": "0.0.1",
  "bin": {
    "nodecopter-stream": "bin/nodecopter-stream"
  },
  "scripts": {
    "start": "nodecopter-stream.js",
    "test": "jasmine-node spec"
  },
  "dependencies": {
    "ar-drone": "~0.0.2",
    "buffy": "0.0.4",
    "mkdirp": "0.3.4"
  },
  "devDependencies": {
    "jasmine-node": "~1.0.26"
  },
  "readme": "## nodecopter-stream\n\nbrowser live stream from your \n[Parrot AR Drone 2.0](http://ardrone2.parrot.com/).\n\nThis is a proof of concept implementation using ffmpeg and ffserver and\na mjpeg live stream.\n\nYou need a recent version of ffmpeg (together with ffserver) installed.\n\nKnown to work is ffmpeg 0.11.1.git-1ad63ff (ffmpeg-devel from macports).\n\n\nInstall via Github to get the *latest* version:\n\n```bash\nnpm install -g git://github.com/bkw/nodecopter-stream.git\n```\n\nLaunch the server:\n```bash\nnodecopter-stream\n```\n\n... and then open index.html in a recent browser (firefox, chrome, opera).\n\n\n##TODO\n\n* implement more stream types (HLS!)\n\n* experiment with different encodings, bitrates and other ffserver settings\n\n* check whether webm endocing has improved with ffmpeg 1.0\n",
  "readmeFilename": "README.md",
  "description": "browser live stream from your  [Parrot AR Drone 2.0](http://ardrone2.parrot.com/).",
  "_id": "nodecopter-stream@0.0.1",
  "_from": "nodecopter-stream@"
}
